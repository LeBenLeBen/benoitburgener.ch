<script type="text/javascript">
(function(){
  if('serviceWorker' in navigator) {
    navigator.serviceWorker.getRegistrations().then(function(registrations) {
      for(let registration of registrations) {
        registration.unregister();
      }
    });
  }

  function setLightnessMode(isDark, save, toggleBtn) {
    if (isDark) {
      document.documentElement.classList.add('dark');
      var title = 'Disable dark mode';
      toggleBtn.setAttribute('aria-label', title);
      toggleBtn.setAttribute('title', title);
    } else {
      document.documentElement.classList.remove('dark');
      var title = 'Enable dark mode';
      toggleBtn.setAttribute('aria-label', title);
      toggleBtn.setAttribute('title', title);
    }

    if (save) {
      sessionStorage.setItem('dark-mode', JSON.stringify(isDark));
    }
  }

  var storedValue = sessionStorage.getItem('dark-mode');
  var mediaQuery = matchMedia('(prefers-color-scheme: dark)');

  document.addEventListener('DOMContentLoaded', function() {
  // Enable toggle button interactivity
    var toggleBtn = document.querySelector('#lightness-toggle');
    toggleBtn.addEventListener('click', function() {
      setLightnessMode(!document.documentElement.classList.contains('dark'), true, toggleBtn);
    });

    // Listen to OS mode change only if user didn't explicitly pick a theme earlier
    if (!storedValue) {
      mediaQuery.addListener(function(event) {
        setLightnessMode(event.matches, false, toggleBtn);
      });
    }

    // Set the intitial mode on page load
    // 1. See if user has picked a specific theme before from Session Storage
    // 2. Fallback to prefers-color-sheme media query
    setLightnessMode(storedValue ? JSON.parse(storedValue) : mediaQuery.matches, false, toggleBtn);

    // Postpone button transition activation so it doesn't trigger on page load
    setTimeout(function() {
      toggleBtn.classList.add('is-ready');
    });
  });
})();
</script>
